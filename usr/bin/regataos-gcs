#!/bin/bash

# If necessary, create the application settings directory
if test ! -e "$HOME/.config/regataos-gcs"; then
	mkdir -p "$HOME/.config/regataos-gcs/"
fi

if test ! -e "$HOME/.config/regataos-gcs/regataos-gcs.conf"; then
	cp -f "/opt/regataos-gcs/scripts/regataos-gcs.conf" "$HOME/.config/regataos-gcs/regataos-gcs.conf"
fi

if test ! -e "$HOME/.config/regataos-gcs/installed-launchers.conf"; then
	echo "" >"$HOME/.config/regataos-gcs/installed-launchers.conf"
	echo "" >"$HOME/.config/regataos-gcs/game-install-dir.conf"
	echo "" >"$HOME/.config/regataos-gcs/installed-games.conf"
fi

if test ! -e "/tmp/regataos-gcs/config"; then
	ln -sf "$HOME/.config/regataos-gcs" "/tmp/regataos-gcs/config"
fi

if test ! -e "$HOME/.local/share/wineprefixes"; then
	mkdir -p "$HOME/.local/share/wineprefixes"
fi

if test ! -e "$HOME/.config/regataos-gcs/installed"; then
	mkdir -p "$HOME/.config/regataos-gcs/installed"
fi

if test ! -e "$HOME/Game Access"; then
	mkdir -p "$HOME/Game Access"
fi

if test -e "$HOME/.config/regataos-gcs/external-games-folder.txt"; then
	if test ! -e "$HOME/Game Access/External-Disc"; then
		ln -sf "$(cat "$HOME/.config/regataos-gcs/external-games-folder.txt")" "$HOME/Game Access/External-Disc";
	fi
fi

# Create download cache
if test ! -e "$HOME/.config/regataos-gcs/progressbar-gcs"; then
	mkdir -p "$HOME/.config/regataos-gcs/progressbar-gcs/"
fi

if test ! -e "/tmp/progressbar-gcs"; then
	ln -sf "$HOME/.config/regataos-gcs/progressbar-gcs" "/tmp/progressbar-gcs"
fi

# Check language
if test ! -e "/tmp/regataos-configs/config/plasma-localerc"; then
	mkdir -p /tmp/regataos-configs/config
	ln -sf "$HOME/.config/plasma-localerc" "/tmp/regataos-configs/config/"
fi

# Update cache
sed -i 's/\(closed-manually=true\)/closed-manually=false/' "$HOME/.config/regataos-gcs/regataos-gcs.conf"

rm -f "/tmp/regataos-gcs/running-with-regataos-gcs.txt"
rm -f "/tmp/regataos-gcs/run-regataos-gcs.txt"

# Clear cache
rm -f /tmp/regataos-gcs/config/steam-games/json/steam-id/*
rm -f "/tmp/regataos-gcs/config/gog-games/games-folders2.txt"

# Set up the desktop location for Wine
if [[ $(ls -l | grep ">") != *"wine -> $HOME/.local/share/applications"* ]]; then
	rm -rf $HOME/.local/share/applications/wine
	ln -sf $HOME/.local/share/applications $HOME/.local/share/applications/wine
	mkdir -p $HOME/.local/share/applications/Programs
fi

# Verify that Epic Games Store is installed to sync information
function legendary_egl_sync() {
	# Check if you have logged in to the Epic Games Store
	if [[ $(ls "$HOME/.config/regataos-gcs/epicstore-games/json/" | grep json) == *".json"* ]]; then
		/opt/regataos-gcs/tools/legendary/legendary status

		cp -f "/opt/regataos-gcs/tools/legendary/config.ini" "$HOME/.config/legendary/config.ini"
	fi

	if [[ $(cat /tmp/regataos-gcs/config/installed-launchers.conf) == *"epicstore"* ]]; then
		PREFIX_LOCATION="$HOME/.local/share/wineprefixes/epicstore-compatibility-mode"
		MANIFESTS_DIR="$PREFIX_LOCATION/drive_c/ProgramData/Epic/EpicGamesLauncher/Data/Manifests"

		/opt/regataos-gcs/tools/legendary/legendary -y egl-sync \
		--egl-manifest-path "$MANIFESTS_DIR" \
		--egl-wine-prefix "$PREFIX_LOCATION"

		# Fix the game install location in the Manifest file for the Epic Games Store.
		checkFiles="$(ls $MANIFESTS_DIR | grep .item)"
		if [[ $checkFiles == *".item"* ]]; then
			for manifest in $checkFiles; do
				checkInstallLocation=$(cat "$MANIFESTS_DIR/$manifest" | grep InstallLocation | cut -d':' -f 2- | sed 's/ "//' | sed 's/",//')

				if [[ $checkInstallLocation != *"Z:\\"* ]]; then
					echo -e 'Fix Manifest the "'"$manifest"'" file to show the game in Epic Games Store launcher.\n'
					echo -e "Old install path: $checkInstallLocation\n"

					oldInstallPath=$(cat "$MANIFESTS_DIR/$manifest" | grep InstallLocation | cut -d':' -f 2- | sed "s/ //" | sed 's/",//')
					newInstallPathShow=$(echo "$oldInstallPath" | sed 's|"\/|Z:\\\\|g' | sed 's|\/|\\\\|g')
					echo "New install path: $newInstallPathShow"

					newInstallPath=$(echo "$oldInstallPath" | sed 's|"\/|Z:\\\\\\\\|g' | sed 's|\/|\\\\\\\\|g')
					sed -i "s|$oldInstallPath|$newInstallPath|g" "$MANIFESTS_DIR/$manifest"
				fi
			done
		fi
	fi

	# Create cache with game files
	/bin/bash /opt/regataos-gcs/scripts/search-epicstore-games.sh

	# Check game json files and create image cache
	/opt/regataos-gcs/scripts/search-epicstore-games-img.sh start >/dev/null
}

# Run app
if [[ $(glxinfo | grep vendor) == *"Intel"* ]]; then
	/opt/regataos-gcs/scripts/search-installeds &
	regataosgcs --disable-gpu /opt/regataos-gcs &
	/bin/bash /opt/regataos-gcs/scripts/check-support-amd-fsr.sh &
	legendary_egl_sync &
	sleep 2
	/opt/regataos-gcs/scripts/progress-bar/capture-progress-download &
	/opt/regataos-gcs/scripts/progress-bar/create-process-queues &
	/opt/regataos-gcs/scripts/progress-bar/run-process-queues &

	ps -C "auto-close-game" >/dev/null
	if [ $? = 1 ]; then
		/opt/regataos-gcs/scripts/action-games/auto-close-game-access
	fi

else
	/opt/regataos-gcs/scripts/search-installeds &
	regataosgcs /opt/regataos-gcs &
	/bin/bash /opt/regataos-gcs/scripts/check-support-amd-fsr.sh &
	legendary_egl_sync &
	sleep 2
	/opt/regataos-gcs/scripts/progress-bar/capture-progress-download &
	/opt/regataos-gcs/scripts/progress-bar/create-process-queues &
	/opt/regataos-gcs/scripts/progress-bar/run-process-queues &

	ps -C "auto-close-game" >/dev/null
	if [ $? = 1 ]; then
		/opt/regataos-gcs/scripts/action-games/auto-close-game-access
	fi
fi

# Closed manually
sed -i 's/\(closed-manually=false\)/closed-manually=true/' "$HOME/.config/regataos-gcs/regataos-gcs.conf"

# If necessary, clear the cache
ps -C ps -e | egrep 'battlenet-comp|epicstore-comp|gog-comp|lol-comp|origin-comp|rockstar-comp|ubisoftconnect|install-epics' >/dev/null
if [ $? = 1 ]; then
	rm -f /tmp/progressbar-gcs/*
fi
