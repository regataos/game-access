#!/bin/bash

# This script ends the application of the Regata OS Game Access application
# when a game or launcher was executed from it.

sleep 10

# Make sure the Game Access app auto-close option is enabled
check_auto_close_config="$(grep -r "auto-close=" "$HOME/.config/regataos-gcs/regataos-gcs.conf" | cut -d"=" -f 2-)"

if [[ $(echo $check_auto_close_config) == *"true"* ]]; then
	# Get the running game executable
	if test -e "/tmp/regataos-gcs/game-executable.txt"; then
		game_executable=$(cat "/tmp/regataos-gcs/game-executable.txt")
	fi

	# Processes to be verified
	if [ ! -z $game_executable ];then
		game_process="rungame | rungame-epicstore | rungame-gcs | rungame-gog | rungame-steam | runlauncher | $game_executable" 
	else
		game_process="rungame | rungame-epicstore | rungame-gcs | rungame-gog | rungame-steam | runlauncher" 
	fi

	launchers_process="battlenet | epicstore | gog | origin | eadesktop | rockstar | ubisoftconnect"
	gcs_process="regataosgcs /opt/regataos-gcs"

	# Verify that process is running
	ps -C "$game_process" > /dev/null
	if [ $? = 0 ]; then
		# Check if the Regata OS Game Access is running
		ps -C "$gcs_process" > /dev/null
		if [ $? = 0 ]; then
			echo "Close the Game Access application"

			kill -SIGTERM $(ps -C regataosgcs | head -2 | tail -1 | awk '{print $1}')
			exit 0
		fi

	else
		ps -C "$launchers_process" > /dev/null
		if [ $? = 0 ]; then
			# Check if the Regata OS Game Access is running
			ps -C "$gcs_process" > /dev/null
			if [ $? = 0 ]; then
				echo "Close the Game Access application"

				kill -SIGTERM $(ps -C regataosgcs | head -2 | tail -1 | awk '{print $1}')
				exit 0
			fi
		fi
	fi
fi
