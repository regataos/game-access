#!/bin/bash
# Script that helps automate the execution of games with Regata OS Game Access

# Location of the application's prefix and executable
PREFIX_LOCATION="$HOME/.local/share/wineprefixes/epicstore-compatibility-mode"
GCS_CONFIG="$HOME/.config/regataos-gcs/regataos-gcs.conf"
LOG_FILE="/var/log/regataos-logs/epicstore-$GAMEID.log"

# Capture game executable
file_search="$HOME/.config/legendary/installed.json"
search="$GAMEID"
line_search=$(cat -n $file_search | grep -w $search | head -4 | tail -1 | awk '{print $1}')
search_result=$(
	qt=$(wc -l $file_search | awk '{print $1}')
	sed -n ''$line_search','$qt'p' $file_search
)
executable=$(echo "$search_result" | head -12 | grep executable | cut -d'"' -f 4- | cut -d'"' -f -1)
echo "$executable" >"/tmp/regataos-gcs/game-executable.txt"

# Variables
export WINEPREFIX="$PREFIX_LOCATION"
export WINEESYNC=1
export WINEFSYNC=1
export WINEFSYNC_FUTEX2=1
export WINE_LARGE_ADDRESS_AWARE=1
#export DXVK_STATE_CACHE=reset
export DXVK_STATE_CACHE_PATH="$PREFIX_LOCATION"
export DXVK_LOG_PATH="$PREFIX_LOCATION"
export PROTON_BATTLEYE_RUNTIME="/opt/regataos-wine/runtimes-anticheats/battleye_runtime"
export PROTON_EAC_RUNTIME="/opt/regataos-wine/runtimes-anticheats/eac_runtime"
export RADV_PERFTEST=gpl

# DXVK-NVAPI
if [[ $(cat "$PREFIX_LOCATION/vulkan.txt") == *"DXVK-NVAPI"* ]]; then
	export WINEDLLOVERRIDES="vulkan-1=n,b;winemenubuilder,winedbg=";
else
	export WINEDLLOVERRIDES="vulkan-1=n,b;winemenubuilder,winedbg,nvapi,nvapi64=";
fi

# DXVK configuration file
if test -e "$PREFIX_LOCATION/dxvk.conf"; then
	export DXVK_CONFIG_FILE="$PREFIX_LOCATION/dxvk.conf"
fi

# Enable AMD FSR
if [[ $(grep -r amd-fsr $GCS_CONFIG) == *"amd-fsr=true"* ]]; then
	# Enable AMD FSR with gamescope
	fsr_with_gamescope="false"

	if [[ $(echo $fsr_with_gamescope) == *"true"* ]]; then
		# Check user resolution
		dimensions_w="$(xdpyinfo | grep 'dimensions:' | awk '{print $2}' | cut -d'x' -f -1)"
		dimensions_h="$(xdpyinfo | grep 'dimensions:' | awk '{print $2}' | cut -d'x' -f 2-)"

		quad_hd=3440
		full_hd=1920

		if [ $dimensions_w –ge $quad_hd ]; then
			GAMESCOPE_FSR="-w 1920 -h 1080 -W $dimensions_w -H $dimensions_h -U -f"

		elif [ $dimensions_w –ge $full_hd ]; then
			GAMESCOPE_FSR="-w 1280 -h 720 -W $dimensions_w -H $dimensions_h -U -f"

		else
			GAMESCOPE_FSR="-w 1280 -h 720 -W $dimensions_w -H $dimensions_h -U -f"
		fi

		export SDL_VIDEODRIVER=x11;

	else
		export WINE_FULLSCREEN_FSR=1
		export WINE_FULLSCREEN_FSR_STRENGTH=2
	fi
fi

# Enable performance info
if [[ $(grep -r fps $GCS_CONFIG) == *"fps=true"* ]]; then
	export MANGOHUD_DLSYM=1
	export MANGOHUD_GL="mangohud --dlsym"
	export DXVK_HUD=compiler
	#export DXVK_HUD=devinfo,fps,frametimes,gpuload,api,compiler
fi

# Check device graphics 
if test -e "/usr/bin/nvidia-xconfig"; then
	# For the NVIDIA proprietary driver
	export __GL_SHADER_DISK_CACHE=1
	export __GL_SHADER_DISK_CACHE_PATH="$PREFIX_LOCATION"
	export __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1
	export VK_LAYER_PATH="/etc/vulkan/icd.d"
	export VK_ICD_FILENAMES="/etc/vulkan/icd.d/nvidia_icd.json"

	# If necessary, run software with the NVIDIA dGPU
	if test -e "/tmp/regataos-prime/use-hybrid-graphics.txt"; then
		#export GAMEMODERUNEXEC="env __NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia __VK_LAYER_NV_optimus=NVIDIA_only $(echo $MANGOHUD_GL)"
		export GAMEMODERUNEXEC="VK_ICD_FILENAMES=/etc/vulkan/icd.d/nvidia_icd.json VK_LAYER_PATH=/etc/vulkan/icd.d"
	else
		export GAMEMODERUNEXEC="env $(echo $MANGOHUD_GL)"
	fi

	# Special configurations for DXVK with NVIDIA GPU
	ln -sf "/opt/regataos-wine/custom-configs/epicstore/dxvk-nvidia.conf" "$PREFIX_LOCATION/dxvk.conf"

else
	# If necessary, run software with the AMD/Intel dGPU
	if test -e "/tmp/regataos-prime/use-hybrid-graphics.txt"; then
		export GAMEMODERUNEXEC="env DRI_PRIME=1 $(echo $MANGOHUD_GL)"
	else
		export GAMEMODERUNEXEC="env $(echo $MANGOHUD_GL)"
	fi

	# Special configurations for DXVK with AMD/Intel GPU
	ln -sf "/opt/regataos-wine/custom-configs/epicstore/dxvk.conf" "$PREFIX_LOCATION/dxvk.conf"
fi

# Configure compatibility mode
/bin/bash /opt/regataos-gcs/scripts/action-games/configure-compatibility-mode -configure-dxvk-vkd3d

# Fix for games
cp -f "/opt/regataos-gcs/tools/legendary/config.ini" "$HOME/.config/legendary/config.ini"

# Automatically sync all games with the Epic Games Launcher
if [[ $(cat /tmp/regataos-gcs/config/installed-launchers.conf) == *"epicstore"* ]]; then
	PREFIX_LOCATION="$HOME/.local/share/wineprefixes/epicstore-compatibility-mode"
	MANIFESTS_DIR="$PREFIX_LOCATION/drive_c/ProgramData/Epic/EpicGamesLauncher/Data/Manifests"

	/opt/regataos-gcs/tools/legendary/legendary -y egl-sync \
	--egl-manifest-path "$MANIFESTS_DIR" \
	--egl-wine-prefix "$PREFIX_LOCATION"

	# Fix the game install location in the Manifest file for the Epic Games Store.
	checkFiles="$(ls $MANIFESTS_DIR | grep .item)"
	if [[ $checkFiles == *".item"* ]]; then
		for manifest in $checkFiles; do
			checkInstallLocation=$(cat "$MANIFESTS_DIR/$manifest" | grep InstallLocation | cut -d':' -f 2- | sed 's/ "//' | sed 's/",//')

			if [[ $checkInstallLocation != *"Z:\\"* ]]; then
				echo -e 'Fix Manifest the "'"$manifest"'" file to show the game in Epic Games Store launcher.\n'
				echo -e "Old install path: $checkInstallLocation\n"

				oldInstallPath=$(cat "$MANIFESTS_DIR/$manifest" | grep InstallLocation | cut -d':' -f 2- | sed "s/ //" | sed 's/",//')
				newInstallPathShow=$(echo "$oldInstallPath" | sed 's|"\/|Z:\\\\|g' | sed 's|\/|\\\\|g')
				echo "New install path: $newInstallPathShow"

				newInstallPath=$(echo "$oldInstallPath" | sed 's|"\/|Z:\\\\\\\\|g' | sed 's|\/|\\\\\\\\|g')
				sed -i "s|$oldInstallPath|$newInstallPath|g" "$MANIFESTS_DIR/$manifest"
			fi
		done
	fi
fi

# Automatically close the Game Access app
/opt/regataos-gcs/scripts/action-games/auto-close-game-access &

# Run game
if [[ $(echo $fsr_with_gamescope) == *"true"* ]]; then
	(/opt/regataos-gcs/tools/legendary/legendary launch "$GAMEID" --wine "wine-gcs" --wine-prefix "$PREFIX_LOCATION" \
	--wrapper "gamemoderun gamescope $(echo $GAMESCOPE_FSR) --") 2>&1 | tee $LOG_FILE
else
	(/opt/regataos-gcs/tools/legendary/legendary launch "$GAMEID" --wine "wine-gcs" --wine-prefix "$PREFIX_LOCATION" \
	--wrapper "gamemoderun") 2>&1 | tee $LOG_FILE
fi

# Clear cache
rm -f "/tmp/regataos-gcs/running-$GAMENICK"
