#!/bin/bash
# Script that helps automate the execution of games with Regata OS Game Access

# Capture game info
user=$(users | awk '{print $1}')
game_folder="$(grep -r "gamefolder" /opt/regataos-gcs/games-list/$gameNickname.json | cut -d":" -f 2- | sed 's/ //' | sed 's/"\|,//g')"
file_executable="$(grep -r "file_executable" /opt/regataos-gcs/games-list/$gameNickname.json | cut -d":" -f 2- | sed 's/ //' | sed 's/"\|,//g' | sed "s/username/$user/")"
game_plataform="$(grep -r "plataform" /opt/regataos-gcs/games-list/$gameNickname.json | cut -d":" -f 2- | sed 's/ //' | sed 's/"\|,//g')"
custom_runtime="$(grep -r "custom_runtime" /opt/regataos-gcs/games-list/$gameNickname.json | cut -d":" -f 2- | sed 's/ //' | sed 's/"\|,//g')"
execute_args="$(grep -r "execute_args" /opt/regataos-gcs/games-list/$gameNickname.json | cut -d":" -f 2- | sed 's/ //' | sed 's/"\|,//g')"

GCS_CONFIG="$HOME/.config/regataos-gcs/regataos-gcs.conf"
LOG_FILE="/var/log/regataos-logs/gcs-$gameNickname.log"

echo "$file_executable" >"/tmp/regataos-gcs/game-executable.txt"

# Variables for Wine
if [[ $(echo $game_plataform) == *"windows"* ]]; then
    if [[ $(echo $custom_runtime) == *"true"* ]]; then
        # Variables for custom Wine
        export CUSTOM_WINE_DIR="$(cat $HOME/.config/regataos-gcs/custom-runtime/$gameNickname.txt)"

        export WINEDLLPATH="$CUSTOM_WINE_DIR/lib:$CUSTOM_WINE_DIR/lib64"
        export WINESERVER="$CUSTOM_WINE_DIR/bin/wineserver"
        export WINELOADER="$CUSTOM_WINE_DIR/bin/wine"
        export WINE="$CUSTOM_WINE_DIR/bin/wine"

        alias wine="$CUSTOM_WINE_DIR/bin/wine"
        alias wine64="$CUSTOM_WINE_DIR/bin/wine64"
        alias wineserver="$CUSTOM_WINE_DIR/bin/wineserver"
        alias wineboot="$CUSTOM_WINE_DIR/bin/wineboot"
        alias winecfg="$CUSTOM_WINE_DIR/bin/winecfg"
        alias msiexec="$CUSTOM_WINE_DIR/bin/msiexec"
    fi

    export PREFIX_LOCATION="$HOME/.local/share/wineprefixes/$gameNickname-compatibility-mode"
    export WINEPREFIX="$PREFIX_LOCATION"
    export WINEESYNC=1
    export WINEFSYNC=1
    export WINEFSYNC_FUTEX2=1
    export WINE_LARGE_ADDRESS_AWARE=1
    #export DXVK_STATE_CACHE=reset
    export DXVK_STATE_CACHE_PATH="$PREFIX_LOCATION"
    export DXVK_LOG_PATH="$PREFIX_LOCATION"
    export RADV_PERFTEST=gpl

    # DXVK-NVAPI
    if [[ $(cat "$PREFIX_LOCATION/vulkan.txt") == *"DXVK-NVAPI"* ]]; then
        export WINEDLLOVERRIDES="winemenubuilder,winedbg="
    else
        export WINEDLLOVERRIDES="winemenubuilder,winedbg,nvapi,nvapi64="
    fi

    # DXVK configuration file
    if test -e "$PREFIX_LOCATION/dxvk.conf"; then
        export DXVK_CONFIG_FILE="$PREFIX_LOCATION/dxvk.conf"
    fi

    # Enable AMD FSR
    if [[ $(grep -r amd-fsr $GCS_CONFIG) == *"amd-fsr=true"* ]]; then
        export WINE_FULLSCREEN_FSR=1
        export WINE_FULLSCREEN_FSR_STRENGTH=2
    fi
fi

# Enable performance info
if [[ $(grep -r fps $GCS_CONFIG) == *"fps=true"* ]]; then

    if [[ $(echo $game_plataform) == *"windows"* ]]; then
        export MANGOHUD=1
        export MANGOHUD_GL="mangohud"
        export DXVK_HUD=compiler
    else
        export MANGOHUD_DLSYM=1
        export MANGOHUD_GL="mangohud --dlsym"
    fi
fi

# For the NVIDIA proprietary driver
if test -e /usr/bin/nvidia-xconfig; then
    # For the NVIDIA proprietary driver
    export __GL_SHADER_DISK_CACHE=1
    export __GL_SHADER_DISK_CACHE_PATH="$PREFIX_LOCATION"
    export __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1

    # If necessary, run software with the NVIDIA dGPU
    if test -e "/tmp/regataos-prime/use-hybrid-graphics.txt"; then
        export GAMEMODERUNEXEC="env __NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia __VK_LAYER_NV_optimus=NVIDIA_only $(echo $MANGOHUD_GL)"
    else
        export GAMEMODERUNEXEC="env $(echo $MANGOHUD_GL)"
    fi

    # Special configurations for DXVK with NVIDIA GPU
    if [[ $(echo $game_plataform) == *"windows"* ]]; then
        ln -sf "/opt/regataos-wine/custom-configs/gcs/dxvk-nvidia.conf" "$PREFIX_LOCATION/dxvk.conf"
    fi

else
    # If necessary, run software with the AMD/Intel dGPU
    if test -e "/tmp/regataos-prime/use-hybrid-graphics.txt"; then
        export GAMEMODERUNEXEC="env DRI_PRIME=1 $(echo $MANGOHUD_GL)"
    else
        export GAMEMODERUNEXEC="env $(echo $MANGOHUD_GL)"
    fi

    # Special configurations for DXVK with AMD/Intel GPU
    if [[ $(echo $game_plataform) == *"windows"* ]]; then
        ln -sf "/opt/regataos-wine/custom-configs/gcs/dxvk.conf" "$PREFIX_LOCATION/dxvk.conf"
    fi
fi

# Configure compatibility mode
if [[ $(echo $game_plataform) == *"windows"* ]]; then
    if [[ $(echo $custom_runtime) != *"true"* ]]; then
        export WINEPREFIX="$PREFIX_LOCATION"
        /bin/bash /opt/regataos-gcs/scripts/action-games/configure-compatibility-mode -configure-dxvk-vkd3d
    fi
fi

# Special fix
if [[ $(echo $gameNickname) == *"lol"* ]]; then
    pkexec sh -c 'sysctl -w abi.vsyscall32=0'
    /opt/regataos-gcs/scripts/action-games/launch-helper-lol.sh start &
fi

# Automatically close the Game Access app
/opt/regataos-gcs/scripts/action-games/auto-close-game-access &

# Run game
if [ ! -z $execute_args ]; then
    runGame="$file_executable $(echo $execute_args)"
else
    runGame="$file_executable"
fi

if [[ $(echo $game_plataform) == *"windows"* ]]; then
    if [[ $(echo $custom_runtime) == *"true"* ]]; then
        (gamemoderun $CUSTOM_WINE_DIR/bin/wine "$PREFIX_LOCATION/$runGame") 2>&1 | tee $LOG_FILE
    else
        (gamemoderun wine-gcs "$PREFIX_LOCATION/$runGame") 2>&1 | tee $LOG_FILE
    fi
else
    (gamemoderun "$HOME/Game Access/$game_folder/$runGame") 2>&1 | tee $LOG_FILE
fi

# Return to system default configuration
if [ "$(cat /proc/sys/abi/vsyscall32)" -ne 1 ]; then
    pkexec sh -c 'sysctl -w abi.vsyscall32=1'
fi

# Clear desktop
test -f "${XDG_CONFIG_HOME:-$HOME/.config}/user-dirs.dirs" && source "${XDG_CONFIG_HOME:-$HOME/.config}/user-dirs.dirs"
DESKTOP_DIR="${XDG_DESKTOP_DIR:-$HOME/Desktop}"

if [ -d "$DESKTOP_DIR" ]; then
    cd "/$DESKTOP_DIR"
    rm -f "League of Legends.desktop"
    rm -f "Riot Client.desktop"
    rm -f "Riot Client.lnk"
    rm -f "Warframe.lnk"
fi

# Clear cache
rm -rf "$HOME/.local/share/applications/wine/Programs/Riot Games"
rm -rf "$HOME/.local/share/applications/Programs/Riot Games"
rm -f "/tmp/regataos-gcs/running-$gameNickname"
