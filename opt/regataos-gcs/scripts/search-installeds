#!/bin/bash

# Search for installed games
sleepTime="$2"
function search_installeds() {
	if [ ! -z "$sleepTime" ];then
		sleep $sleepTime
	fi

	/bin/bash /opt/regataos-gcs/scripts/search-epicstore-games.sh
	/bin/bash /opt/regataos-gcs/scripts/search-gog-games.sh
	/bin/bash /opt/regataos-gcs/scripts/search-installed-games-gog.sh
	/bin/bash /opt/regataos-gcs/scripts/search-installed-games.sh &

	# Capture the games installation folder from the Epic Games Store
	if test -e "/tmp/progressbar-gcs/download-percentage-legendary"; then
		if test ! -e "/tmp/regataos-gcs/game-patch-epicstore.txt"; then
			if [[ $(grep -r "Install path" "/tmp/progressbar-gcs/download-percentage-legendary") == *"Install path"* ]]; then
				install_path="$(grep -r "Install path" "/tmp/progressbar-gcs/download-percentage-legendary" | cut -d":" -f 3- | cut -d" " -f 2-)"
				echo "$install_path" > "/tmp/regataos-gcs/game-patch-epicstore.txt"
			fi
		fi
	fi
}

# Check GOG Login
function checkGogLogin() {
	user=$(users | awk '{print $1}')

	if [[ $(grep -r userId "$HOME/.local/share/wineprefixes/gog-compatibility-mode/drive_c/users/$user/AppData/Local/GOG.com/Galaxy/Configuration/config.json") == *"userId"* ]]; then
		if ! test -e "$HOME/.config/regataos-gcs/gog-games/gamedb.json"; then
			ps -C "search-gog-games.sh" > /dev/null
			if [ $? = 1 ]; then
				/opt/regataos-gcs/scripts/search-gog-games.sh start
			fi
		fi
	fi
}

# Check for JSON files in the directory listing installed games
function detect_games() {
	directory_installed_json="/tmp/regataos-gcs/config/installed"
	check_installed_games=$(ls $directory_installed_json/)

	# For GOG Games
	/bin/bash /opt/regataos-gcs/scripts/search-gog-games.sh

	if [[ $(echo $check_installed_games) == *".json"* ]]; then
		echo "Show installed games!" > "$directory_installed_json/show-installed-games.txt"
	else 
		rm -f "$directory_installed_json/show-installed-games.txt"
	fi

	if [[ $(echo $check_installed_games) == *"epicstore.json"* ]]; then
		alert="Show EGS installed!"
		echo "$alert" > "$directory_installed_json/show-installed-games-epic.txt"
	else
		rm -f "$directory_installed_json/show-installed-games-epic.txt"
	fi

	if [[ $(echo $check_installed_games) == *"steam.json"* ]]; then
		alert="Show Steam installed!"
		echo "$alert" > "$directory_installed_json/show-installed-games-steam.txt"
	else
		rm -f "$directory_installed_json/show-installed-games-steam.txt"
	fi
}

detect_games_loop() {
	search_installeds &

	while :
	do
		# Check if the Regata OS Game Access is running
		ps -C "regataosgcs" > /dev/null
		if [ $? = 0 ]; then
			/bin/bash /opt/regataos-gcs/scripts/search-steam-games.sh & \
			detect_games & checkGogLogin
		else
			echo "Nothing to do..."
			break
		fi
		sleep 10
	done
}

case $1 in
   "-search") detect_games && search_installeds
        ;;
   "-detect") detect_games
        ;;
   "-detect-in-loop") detect_games_loop
		;;
   *) echo "Invalid option!"
		exit 1
		;;
esac
